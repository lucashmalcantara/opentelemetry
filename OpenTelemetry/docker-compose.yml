# Launch command: docker-compose up
name: opentelemetry-app
services:
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.61.0
    container_name: otel-collector
    volumes:
      - ./config/collector.yml:/etc/otel/config.yaml
    command: --config /etc/otel/config.yaml
    depends_on:
      - jaeger
      - prometheus

  jaeger:
    image: jaegertracing/all-in-one:1.38.1
    container_name: jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: true
    ports:
      - 16686:16686 # Jaeger UI

  prometheus:
    image: prom/prometheus:v2.40.5
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090 # Prometheus UI

  redis:
    image: redis:6.2
    container_name: redis
    environment:
      ALLOW_EMPTY_PASSWORD: "yes"

  # opentelemetry-api:
  #   image: opentelemetry-api
  #   container_name: opentelemetry-api
  #   depends_on:
  #     - redis
  #   build:
  #     context: .
  #     dockerfile: OpenTelemetry.Api/Dockerfile
  #   env_file:
  #     - .env
  #   environment:
  #     REDIS_HOST: redis
  #     OTEL_SERVICE_NAME: opentelemetry-api
  #     OTEL_RESOURCE_ATTRIBUTES: deployment.environment=production,service.version=1.0.0.0
  #     OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4318
  #     OTEL_DOTNET_AUTO_METRICS_ADDITIONAL_SOURCES: "OpenTelemetry.Api"
  #   ports:
  #     - 8080:8080